{
  "root": true,
  "ignorePatterns": ["projects/**/*"],
  "plugins": ["simple-import-sort", "jsdoc"],
  "overrides": [
    {
      "files": ["*.html"],
      "extends": ["plugin:@angular-eslint/template/recommended", "plugin:@angular-eslint/template/accessibility"],
      "rules": {}
    },
    {
      "files": ["*.ts"],
      "extends": [
        "eslint:recommended",
        "plugin:prettier/recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates"
      ],
      "rules": {
        "linebreak-style": ["error", "unix"],
        "@typescript-eslint/explicit-member-accessibility": [
          "error",
          {
            "accessibility": "no-public",
            "overrides": {
              "methods": "explicit",
              "properties": "off",
              "onMouseEnter": "off"
            }
          }
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "app",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "app",
            "style": "kebab-case"
          }
        ],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "typeLike",
            "format": ["StrictPascalCase"],
            "leadingUnderscore": "forbid"
          },
          {
            "selector": "variableLike",
            "format": ["strictCamelCase"],
            "leadingUnderscore": "forbid"
          },
          {
            "selector": "memberLike",
            "modifiers": ["private"],
            "format": ["strictCamelCase"],
            "leadingUnderscore": "require"
          },
          {
            "selector": "memberLike",
            "modifiers": ["protected"],
            "format": ["strictCamelCase"],
            "leadingUnderscore": "forbid"
          },
          {
            "selector": "memberLike",
            "modifiers": ["public"],
            "format": ["strictCamelCase"],
            "leadingUnderscore": "forbid"
          },
          {
            "selector": "memberLike",
            "modifiers": ["public", "readonly"],
            "format": ["StrictPascalCase"],
            "leadingUnderscore": "forbid"
          },
          {
            "selector": "enumMember",
            "format": ["StrictPascalCase"],
            "leadingUnderscore": "forbid"
          },
          {
            "selector": "interface",
            "format": ["PascalCase"],
            "custom": {
              "regex": "^I([A-Z][a-z]+)+",
              "match": true
            }
          },
          {
            "selector": "parameter",
            "format": ["strictCamelCase"],
            "leadingUnderscore": "forbid"
          }
        ],
        "simple-import-sort/imports": "error",
        "simple-import-sort/exports": "error",
        "@typescript-eslint/explicit-function-return-type": [
          "error",
          {
            "allowExpressions": true,
            "allowTypedFunctionExpressions": true,
            "allowHigherOrderFunctions": true,
            "allowDirectConstAssertionInArrowFunctions": true,
            "allowConciseArrowFunctionExpressionsStartingWithVoid": true
          }
        ],
        "jsdoc/check-alignment": "error",
        "jsdoc/check-indentation": "error",
        "jsdoc/check-param-names": "error",
        "jsdoc/check-tag-names": "error",
        "jsdoc/check-types": "error",
        "jsdoc/implements-on-classes": "error",
        "jsdoc/no-types": "error",
        "jsdoc/require-description": "error",
        "jsdoc/require-jsdoc": [
          "error",
          {
            "require": {
              "FunctionDeclaration": true,
              "MethodDefinition": true,
              "ClassDeclaration": false,
              "ArrowFunctionExpression": false,
              "FunctionExpression": false
            }
          }
        ],
        "jsdoc/require-param": "error",
        "jsdoc/require-param-description": "error",
        "jsdoc/require-param-name": "error",
        "jsdoc/require-returns": "error",
        "jsdoc/require-returns-check": "error",
        "jsdoc/require-returns-description": "error",
        "jsdoc/require-returns-type": "off",
        "jsdoc/require-description-complete-sentence": "error"
      }
    }
  ]
}
